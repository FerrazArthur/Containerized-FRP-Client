version: '3.3'
services:

  # Local DNS server that resolves to nginx-server
  dnsmasq:
    image: andyshinn/dnsmasq
    container_name: "dnsmasq"
    cap_add:
      - NET_ADMIN
    restart: always
    ports:
      - "53:53/udp"
      - "53:53/tcp"
    volumes:
      - ./dns-dev/dnsmasq.conf:/etc/dnsmasq.conf
    command: --log-facility=-
    networks:
      - dns-proxy

  # Network proxy solver to manage docker services and the pseudoTLD
  traefik:
    image: "traefik:v2.2"
    container_name: "traefik"
    restart: always
    command:
      # - "--log.level=ERROR"
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - dns-proxy
      - comms-nginx

  # Script for generating self-signed TLS certificates
  cert-script:
    build:
      dockerfile: Dockerfile-certbot
    labels:
    - "traefik.enable=false"
    container_name: cert-script
    volumes:
      - etc-ssl:/etc/ssl
      - etc-nginx:/etc/nginx

  # The basic frp server
  frp-server:
    build:
      context: .
      dockerfile: Dockerfile-frps
    labels:
    - "traefik.enable=false"
    container_name: frp-server
    volumes:
      - ./frps.toml:/frp/frps.toml:ro
    # environment:
    #   - FRPS_AUTH_TOKEN=${FRPS_AUTH_TOKEN}
    ports:
      - "7000:7000"
      - "7500:7500"
      - "30000-30900:30000-30900"
    networks:
      - comms-nginx
      - comms-frp

  # Nginx server for managing local traffic and TLS certifications
  nginx-server:
    image: nginx:alpine
    labels:
      - traefik.http.routers.nginx-server.rule=Host(`${CUSTOM_APP_URL}`)
      - "traefik.http.routers.myrouter.tls=true"
    container_name: nginx-server
    volumes:
      - etc-ssl:/etc/ssl
      - etc-nginx:/etc/nginx
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "443:443"
    networks:
      - comms-nginx
      - dns-proxy
    depends_on:
      cert-script:
        condition: service_completed_successfully
      frp-server:
        condition: service_started

  # My custom application for providing easy configuration for frp with docker
  frp-client:
    image: test-frpc
    build:
      context: .
      dockerfile: Dockerfile
    labels:
    - "traefik.enable=false"
    volumes:
      - ./server_config:/frp/server_config:ro
      # - ./arthur_client.toml:/frp/arthur_client.toml:ro
    secrets:
      - CREDENTIALS
    environment:
      # - FRPS_AUTH_TOKEN=${FRPS_AUTH_TOKEN}
      - PROXY_NAME=${PROXY_NAME}
      - PROXY_TYPE=${PROXY_TYPE}
      - PROXY_LOCAL_IP=${PROXY_LOCAL_IP}
      - PROXY_LOCAL_PORT=${PROXY_LOCAL_PORT}
      - CUSTOM_APP_URL=${CUSTOM_APP_URL}
    container_name: frp-client
    tty: true
    stdin_open: true
    networks:
      - comms-frp
      - comms-local
    depends_on:
      - frp-server

  # Server that provides some application via http
  wagi-server:
    image: wagi
    build:
      context: .
      dockerfile: application/Dockerfile
    container_name: wagi-server
    labels:
    - "traefik.enable=false"
    environment:
      - LOCAL_WAGI_BIND_IP=${LOCAL_WAGI_BIND_IP}
      - LOCAL_WAGI_BIND_PORT=${LOCAL_WAGI_BIND_PORT}
    networks:
      - comms-local

secrets:
  CREDENTIALS:
    file: ./.credentials

networks:
  comms-frp:
    driver: bridge
  comms-local:
    driver: bridge
  comms-nginx:
    driver: bridge
  dns-proxy:
    driver: bridge

volumes:
  etc-ssl:
  etc-nginx: